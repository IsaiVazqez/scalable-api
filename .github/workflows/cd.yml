name: cd

on:
  workflow_run:
    workflows: ["ci"]        # corre solo cuando el workflow "ci" termine
    types: [completed]

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: ðŸš€ Deploy to EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            SHA="${{ github.event.workflow_run.head_sha }}"
            echo ">>> Deploying scalable-api $SHA"

            sudo mkdir -p /opt/scalable && sudo chown $USER:$USER /opt/scalable
            cd /opt/scalable

            # compose sin 'version:' (ya es obsoleto)
            cat > docker-compose.prod.yml <<YAML
            services:
              api:
                image: ghcr.io/isaivazqez/scalable-api:${SHA}
                pull_policy: always
                container_name: scalable_api
                restart: unless-stopped
                environment:
                  ASPNETCORE_ENVIRONMENT: Production
                ports:
                  - "80:8080"
            YAML

            # login a GHCR con tu PAT guardado como 'TOKEN'
            echo "${{ secrets.TOKEN }}" | docker login ghcr.io -u isaivazqez --password-stdin

            # retry para evitar latencias de propagaciÃ³n en GHCR
            for i in {1..10}; do
              docker pull ghcr.io/isaivazqez/scalable-api:${SHA} && break || {
                echo "Imagen aÃºn no disponible, reintentando ($i/10)..."
                sleep 6
              }
            done

            docker compose -f docker-compose.prod.yml up -d
            echo ">>> Healthcheck"
            curl -fsS -X POST http://localhost/graphql \
              -H "Content-Type: application/json" \
              -d '{"query":"{ ping }"}' || (echo "Healthcheck failed" && exit 1)